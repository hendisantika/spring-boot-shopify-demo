plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id "com.github.ben-manes.versions" version "0.52.0"
}

group = 'com.hendisantika'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'
targetCompatibility = '21'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jersey'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'joda-time:joda-time:2.14.0'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'org.apache.commons:commons-text:1.13.1'
    implementation 'com.github.rholder:guava-retrying:2.0.0'
    implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.19.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.19.1'
    implementation 'commons-io:commons-io:2.19.0'
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.80.Final:osx-aarch_64'
//	implementation 'com.mysql:mysql-connector-j:8.0.33'
//	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.1.4'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.7'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    compileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // runtimeOnly 'io.micrometer:micrometer-registry-new-relic'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.13.1'
    implementation 'com.github.rest-driver:rest-driver:2.0.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.13.1'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.13.1'

}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {

    launchScript {
        properties 'confFolder': '/opt/app/conf/'
    }
}

//bootRun {
//    // Use Spring Boot DevTool only when we run Gradle bootRun task
//    classpath = sourceSets.main.runtimeClasspath + configurations.dev
//
//    if (project.hasProperty('profiles')) {
//        environment SPRING_PROFILES_ACTIVE: profiles
//    } else {
//        def profiles = 'local'
//        environment SPRING_PROFILES_ACTIVE: profiles
//    }
//}
